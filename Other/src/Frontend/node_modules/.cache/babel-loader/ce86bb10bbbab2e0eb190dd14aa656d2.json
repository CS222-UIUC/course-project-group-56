{"ast":null,"code":"var _jsxFileName = \"/Users/adityaasthana/cs222/Upload-View-Pdf-In-Reactjs-main/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Header from \"./Header\"; // Import the main component\n\nimport { Viewer } from '@react-pdf-viewer/core'; // install this library\n// Plugins\n\nimport { defaultLayoutPlugin } from '@react-pdf-viewer/default-layout'; // install this library\n// Import the styles\n\nimport '@react-pdf-viewer/core/lib/styles/index.css';\nimport '@react-pdf-viewer/default-layout/lib/styles/index.css'; // Worker\n\nimport { Worker } from '@react-pdf-viewer/core'; // install this library\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n\n  // Create new plugin instance\n  const defaultLayoutPluginInstance = defaultLayoutPlugin(); // for onchange event\n\n  const [pdfFile, setPdfFile] = useState(null);\n  const [pdfFileError, setPdfFileError] = useState(''); // for submit event\n\n  const [viewPdf, setViewPdf] = useState(null); // onchange event\n\n  const fileType = ['application/pdf'];\n\n  const handlePdfFileChange = e => {\n    let selectedFile = e.target.files[0];\n\n    if (selectedFile) {\n      if (selectedFile && fileType.includes(selectedFile.type)) {\n        let reader = new FileReader();\n        reader.readAsDataURL(selectedFile);\n\n        reader.onloadend = e => {\n          setPdfFile(e.target.result);\n          setPdfFileError('');\n        };\n      } else {\n        setPdfFile(null);\n        setPdfFileError('Please select valid pdf file');\n      }\n    } else {\n      console.log('select your file');\n    }\n  }; // form submit\n\n\n  const handlePdfFileSubmit = e => {\n    e.preventDefault();\n\n    if (pdfFile !== null) {\n      setViewPdf(pdfFile);\n    } else {\n      setViewPdf(null);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-group\",\n      onSubmit: handlePdfFileSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        className: \"form-control\",\n        required: true,\n        onChange: handlePdfFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), pdfFileError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-msg\",\n        children: pdfFileError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-success btn-lg\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"View PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pdf-container\",\n      children: [viewPdf && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Worker, {\n          workerUrl: \"https://unpkg.com/pdfjs-dist@2.6.347/build/pdf.worker.min.js\",\n          children: /*#__PURE__*/_jsxDEV(Viewer, {\n            fileUrl: viewPdf,\n            plugins: [defaultLayoutPluginInstance]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)\n      }, void 0, false), !viewPdf && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \" No pdf file selected\"\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"CnjNl/DIWi1f7IKTcsPtvdquUBc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/adityaasthana/cs222/Upload-View-Pdf-In-Reactjs-main/src/App.js"],"names":["React","useState","Header","Viewer","defaultLayoutPlugin","Worker","App","defaultLayoutPluginInstance","pdfFile","setPdfFile","pdfFileError","setPdfFileError","viewPdf","setViewPdf","fileType","handlePdfFileChange","e","selectedFile","target","files","includes","type","reader","FileReader","readAsDataURL","onloadend","result","console","log","handlePdfFileSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\nimport Header from \"./Header\";\n// Import the main component\nimport { Viewer } from '@react-pdf-viewer/core'; // install this library\n// Plugins\nimport { defaultLayoutPlugin } from '@react-pdf-viewer/default-layout'; // install this library\n// Import the styles\nimport '@react-pdf-viewer/core/lib/styles/index.css';\nimport '@react-pdf-viewer/default-layout/lib/styles/index.css';\n// Worker\nimport { Worker } from '@react-pdf-viewer/core'; // install this library\n\nexport const App = () => {\n\n  // Create new plugin instance\n  const defaultLayoutPluginInstance = defaultLayoutPlugin();\n  \n  // for onchange event\n  const [pdfFile, setPdfFile]=useState(null);\n  const [pdfFileError, setPdfFileError]=useState('');\n\n  // for submit event\n  const [viewPdf, setViewPdf]=useState(null);\n\n  // onchange event\n  const fileType=['application/pdf'];\n  const handlePdfFileChange=(e)=>{\n    let selectedFile=e.target.files[0];\n    if(selectedFile){\n      if(selectedFile&&fileType.includes(selectedFile.type)){\n        let reader = new FileReader();\n            reader.readAsDataURL(selectedFile);\n            reader.onloadend = (e) =>{\n              setPdfFile(e.target.result);\n              setPdfFileError('');\n            }\n      }\n      else{\n        setPdfFile(null);\n        setPdfFileError('Please select valid pdf file');\n      }\n    }\n    else{\n      console.log('select your file');\n    }\n  }\n\n  // form submit\n  const handlePdfFileSubmit=(e)=>{\n    e.preventDefault();\n    if(pdfFile!==null){\n      setViewPdf(pdfFile);\n    }\n    else{\n      setViewPdf(null);\n    }\n  }\n\n  return (\n    \n    <div className='container'>\n\n    <Header/>\n\n    <br></br>\n    \n      <form className='form-group' onSubmit={handlePdfFileSubmit}>\n        <input type=\"file\" className='form-control'\n          required onChange={handlePdfFileChange}\n        />\n        {pdfFileError&&<div className='error-msg'>{pdfFileError}</div>}\n        <br></br>\n        <button type=\"submit\" className='btn btn-success btn-lg'>\n          Upload\n        </button>\n      </form>\n      <br></br>\n      <h4>View PDF</h4>\n      <div className='pdf-container'>\n        {/* show pdf conditionally (if we have one)  */}\n        {viewPdf&&<><Worker workerUrl=\"https://unpkg.com/pdfjs-dist@2.6.347/build/pdf.worker.min.js\">\n          <Viewer fileUrl={viewPdf}\n            plugins={[defaultLayoutPluginInstance]} />\n      </Worker></>}\n\n      {/* if we dont have pdf or viewPdf state is null */}\n      {!viewPdf&&<> No pdf file selected</>}\n      </div>\n\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}