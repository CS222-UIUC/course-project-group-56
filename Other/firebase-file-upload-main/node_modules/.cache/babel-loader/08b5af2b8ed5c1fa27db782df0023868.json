{"ast":null,"code":"var _jsxFileName = \"/Users/adityaasthana/cs222/firebase-file-upload-main/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { ref, uploadBytes, getDownloadURL, listAll, list } from \"firebase/storage\";\nimport { storage } from \"./firebase\";\nimport { v4 } from \"uuid\";\nimport React from \"react\";\nimport Header from \"./Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [pdfUpload, setPdfUpload] = useState(null);\n  const [imageUrls, setImageUrls] = useState([]);\n  const pdfListRef = ref(storage, \"scheudles/\");\n\n  const uploadFile = () => {\n    if (pdfUpload == null) return;\n    const pdfRef = ref(storage, `schedules/${pdfUpload.name + v4()}`);\n    uploadBytes(pdfRef, pdfUpload).then(() => {// getDownloadURL(snapshot.ref).then((url) => {\n      //   setImageUrls((prev) => [...prev, url]);\n      // });\n    });\n  }; // useEffect(() => {\n  //   listAll(pdfListRef).then((response) => {\n  //     response.items.forEach((item) => {\n  //       getDownloadURL(item).then((url) => {\n  //         setImageUrls((prev) => [...prev, url]);\n  //       });\n  //     });\n  //   });\n  // }, []);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: event => {\n        setPdfUpload(event.target.files[0]);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: uploadFile,\n      children: \" Upload PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"qZd/wL03KSmEV4PofbWbBgSd8T4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/adityaasthana/cs222/firebase-file-upload-main/src/App.js"],"names":["useState","useEffect","ref","uploadBytes","getDownloadURL","listAll","list","storage","v4","React","Header","App","pdfUpload","setPdfUpload","imageUrls","setImageUrls","pdfListRef","uploadFile","pdfRef","name","then","event","target","files"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SACEC,GADF,EAEEC,WAFF,EAGEC,cAHF,EAIEC,OAJF,EAKEC,IALF,QAMO,kBANP;AAOA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,EAAT,QAAmB,MAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAMgB,UAAU,GAAGd,GAAG,CAACK,OAAD,EAAU,YAAV,CAAtB;;AACA,QAAMU,UAAU,GAAG,MAAM;AACvB,QAAIL,SAAS,IAAI,IAAjB,EAAuB;AACvB,UAAMM,MAAM,GAAGhB,GAAG,CAACK,OAAD,EAAW,aAAYK,SAAS,CAACO,IAAV,GAAiBX,EAAE,EAAG,EAA7C,CAAlB;AACAL,IAAAA,WAAW,CAACe,MAAD,EAASN,SAAT,CAAX,CAA+BQ,IAA/B,CAAoC,MAAkB,CACpD;AACA;AACA;AACD,KAJD;AAKD,GARD,CALa,CAeb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,QAAQ,EAAGC,KAAD,IAAW;AACnBR,QAAAA,YAAY,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAD,CAAZ;AACD;AAJH;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAQ,MAAA,OAAO,EAAEN,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAvCQN,G;;KAAAA,G;AAyCT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport {\n  ref,\n  uploadBytes,\n  getDownloadURL,\n  listAll,\n  list,\n} from \"firebase/storage\";\nimport { storage } from \"./firebase\";\nimport { v4 } from \"uuid\";\nimport React from \"react\";\nimport Header from \"./Header\";\n\n\nfunction App() {\n  const [pdfUpload, setPdfUpload] = useState(null);\n  const [imageUrls, setImageUrls] = useState([]);\n\n  const pdfListRef = ref(storage, \"scheudles/\");\n  const uploadFile = () => {\n    if (pdfUpload == null) return;\n    const pdfRef = ref(storage, `schedules/${pdfUpload.name + v4()}`);\n    uploadBytes(pdfRef, pdfUpload).then((/*snapshot*/) => {\n      // getDownloadURL(snapshot.ref).then((url) => {\n      //   setImageUrls((prev) => [...prev, url]);\n      // });\n    });\n  };\n\n  // useEffect(() => {\n  //   listAll(pdfListRef).then((response) => {\n  //     response.items.forEach((item) => {\n  //       getDownloadURL(item).then((url) => {\n  //         setImageUrls((prev) => [...prev, url]);\n  //       });\n  //     });\n  //   });\n  // }, []);\n\n  return (\n    <div className=\"App\">\n      <input\n        type=\"file\"\n        onChange={(event) => {\n          setPdfUpload(event.target.files[0]);\n        }}\n      />\n      <button onClick={uploadFile}> Upload PDF</button>\n      {/* {imageUrls.map((url) => {\n        return <img src={url} />;\n      })} */}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}